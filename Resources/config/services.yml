parameters:
    idci_step.step.registry.class: IDCI\Bundle\StepBundle\Step\StepRegistry
    idci_step.path.registry.class: IDCI\Bundle\StepBundle\Path\PathRegistry

    idci_step.step.builder.class: IDCI\Bundle\StepBundle\Step\StepBuilder
    idci_step.path.builder.class: IDCI\Bundle\StepBundle\Path\PathBuilder

    idci_step.map.builder.factory.class: IDCI\Bundle\StepBundle\Map\MapBuilderFactory
    idci_step.navigator.factory.class: IDCI\Bundle\StepBundle\Navigation\NavigatorFactory

    idci_step.step.type.html.class: IDCI\Bundle\StepBundle\Step\Type\HtmlStepType
    idci_step.step.type.form.class: IDCI\Bundle\StepBundle\Step\Type\FormStepType

    idci_step.path.type.single.class: IDCI\Bundle\StepBundle\Path\Type\SinglePathType
    idci_step.path.type.conditional_destination.class: IDCI\Bundle\StepBundle\Path\Type\ConditionalDestinationPathType
    idci_step.path.type.random_destination.class: IDCI\Bundle\StepBundle\Path\Type\RandomDestinationPathType
    idci_step.path.type.end.class: IDCI\Bundle\StepBundle\Path\Type\EndPathType

    idci_step.flow.event_notifier.class: IDCI\Bundle\StepBundle\Flow\FlowEventNotifier
    idci_step.flow.data_store_registry.class: IDCI\Bundle\StepBundle\Flow\FlowDataStoreRegistry
    idci_step.flow.data_store.session.class: IDCI\Bundle\StepBundle\Flow\DataStore\SessionFlowDataStore

    idci_step.configuration.builder.class: IDCI\Bundle\StepBundle\Configuration\Builder\MapConfigurationBuilder
    idci_step.configuration.worker_registry.class: IDCI\Bundle\StepBundle\Configuration\Worker\ConfigurationWorkerRegistry
    idci_step.configuration.worker.form_builder.class: IDCI\Bundle\StepBundle\Configuration\Worker\FormBuilderWorker
    idci_step.configuration.fetcher_registry.class: IDCI\Bundle\StepBundle\Configuration\Fetcher\ConfigurationFetcherRegistry
    idci_step.configuration.fetcher.configuration.class: IDCI\Bundle\StepBundle\Configuration\Fetcher\ConfigurationFetcher

    idci_step.navigation.logger.class: IDCI\Bundle\StepBundle\Navigation\NavigationLogger
    idci_step.data_collector.class: IDCI\Bundle\StepBundle\DataCollector\NavigationDataCollector

    idci_step.serialization.serializer_provider.class: IDCI\Bundle\StepBundle\Serialization\SerializerProvider


services:

    # Registry

    idci_step.step.registry:
        class: %idci_step.step.registry.class%

    idci_step.path.registry:
        class: %idci_step.path.registry.class%

    idci_step.flow.data_store_registry:
        class: %idci_step.flow.data_store_registry.class%


    # Builder

    idci_step.step.builder:
        class: %idci_step.step.builder.class%
        arguments: [@idci_step.step.registry]

    idci_step.path.builder:
        class: %idci_step.path.builder.class%
        arguments: [@idci_step.path.registry]


    # Factory

    idci_step.map.builder.factory:
        class: %idci_step.map.builder.factory.class%
        arguments:
            - @idci_step.step.builder
            - @idci_step.path.builder

    idci_step.navigator.factory:
        class: %idci_step.navigator.factory.class%
        arguments:
            - @form.factory
            - @idci_step.flow.data_store_registry
            - @idci_step.configuration.builder
            - @idci_step.configuration.fetcher_registry
            - @idci_step.navigation.logger


    # Step

    idci_step.step.type.html:
        class: %idci_step.step.type.html.class%
        tags:
            - { name: idci_step.step.type, alias: html }

    idci_step.step.type.form:
        class: %idci_step.step.type.form.class%
        tags:
            - { name: idci_step.step.type, alias: form }


    # Path

    idci_step.path.type.single:
        class: %idci_step.path.type.single.class%
        tags:
            - { name: idci_step.path.type, alias: single }

    idci_step.path.type.conditional_destination:
        class: %idci_step.path.type.conditional_destination.class%
        tags:
            - { name: idci_step.path.type, alias: conditional_destination }

    idci_step.path.type.random_destination:
        class: %idci_step.path.type.random_destination.class%
        tags:
            - { name: idci_step.path.type, alias: random_destination }

    idci_step.path.type.end:
        class: %idci_step.path.type.end.class%
        tags:
            - { name: idci_step.path.type, alias: end }


    # FlowDataStore

    idci_step.flow.data_store.session:
        class: %idci_step.flow.data_store.session.class%
        tags:
            - { name: idci_step.flow.data_store, alias: session }


    # Configuration

    idci_step.configuration.builder:
        class: %idci_step.configuration.builder.class%
        arguments:
            - @idci_step.map.builder.factory
            - @idci_step.configuration.worker_registry

    idci_step.configuration.worker_registry:
        class: %idci_step.configuration.worker_registry.class%

    idci_step.configuration.worker.form_builder:
        class: %idci_step.configuration.worker.form_builder.class%
        arguments: [@form.factory]
        tags:
            - { name: idci_step.configuration.worker, alias: form_builder }

    idci_step.configuration.fetcher_registry:
        class: %idci_step.configuration.fetcher_registry.class%

    idci_step.configuration.fetcher.configuration:
        class: %idci_step.configuration.fetcher.configuration.class%
        abstract: true
        arguments: [null]


    # Logger

    idci_step.navigation.logger:
        class:     %idci_step.navigation.logger.class%
        arguments: [@service_container]
        public:    false


    # DataCollector

    idci_step.data_collector:
        class:     %idci_step.data_collector.class%
        arguments: [@idci_step.navigation.logger]
        public:    false
        tags:
            - { name: data_collector, template: 'IDCIStepBundle:Collector:navigation', id: idci_step.navigation }


    # FormType

    form.type.html_content:
        class: IDCI\Bundle\StepBundle\Step\Form\HtmlContentType
        tags:
            - { name: form.type, alias: html_content }

    form.type.form_content:
        class: IDCI\Bundle\StepBundle\Step\Form\FormContentType
        tags:
            - { name: form.type, alias: form_content }